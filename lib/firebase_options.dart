// File generated by FlutterFire CLI.
/*In this specific case, firebase_options.dart likely contains code related to 
Firebase configuration options. It could include things like Firebase API keys, 
project IDs, or other settings needed to initialize and configure Firebase 
services within your Flutter application. */
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyCbBznfnbZRdwBTErkfEcQpg-0mwImK4mQ',
    appId: '1:290728547022:web:bfca9ae66748478dc6369f',
    messagingSenderId: '290728547022',
    projectId: 'budgetplanner-3a52f',
    authDomain: 'budgetplanner-3a52f.firebaseapp.com',
    storageBucket: 'budgetplanner-3a52f.appspot.com',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyBjZkz8UfJLfItqBO9WV0AipVwY5QldFKw',
    appId: '1:290728547022:android:8a8844a790232c14c6369f',
    messagingSenderId: '290728547022',
    projectId: 'budgetplanner-3a52f',
    storageBucket: 'budgetplanner-3a52f.appspot.com',
  );
}
